(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    font-family: 'Roboto';\n}\n\n:root {\n    --light-gray: #424242;\n    --dark-gray: #303030;\n}\n\n#container {\n    display: grid;\n    height: 100vh;\n    width: 100%;\n    grid-template: 1fr 1.5fr 12fr / 1fr;\n}\n\n#header {\n    background-color: var(--light-gray);\n    font-family: 'Oswald';\n    font-size: 24px;\n    font-weight: 700;\n    color: white;\n    display: flex;\n    align-items: center;\n}\n\n#header>p {\n    padding-left: 24px;\n}\n\n#search {\n    background-color: var(--dark-gray);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n}\n\n#search>form {\n    flex: 1;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#searchBar {\n    outline: none;\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px solid white;\n    height: 30%;\n    width: 35vw;\n    min-width: 300px;\n    color: white;\n    font-size: 16px;\n    background-color: var(--dark-gray);\n}\n\n#submit {\n    display: none;\n}\n\n#display {\n    background-color: #232323;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#weatherDisplay {\n    display: grid;\n    grid-template: 2fr 2fr 1fr / 1fr;\n    height: 50%;\n    width: 50%;\n    overflow: hidden;\n    border-radius: 5px;\n}\n\n#top {\n    background-color: rgb(100, 4, 100);\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n}\n\n#location {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: 'Oswald';\n    font-size: 30px;\n    font-weight: 700;\n    color: white;\n}\n\n#location>svg {\n    fill: white;\n}\n\n#weather {\n    flex: 1;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 24px;\n    color: lightgray;\n}\n\n#middle {\n    background-color: gray;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n}\n\n#temp {\n    font-family: 'Oswald';\n    color: lightgray;\n    font-size: 75px;\n}\n\n#humidity {\n    font-size: 24px;\n    color: white;\n}\n\n#bottom {\n    background-color: var(--light-gray);\n    display: flex;\n    padding-right: 24px;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 8px;\n    color: lightgray;\n}\n\n#tempType {\n    width: 100px;\n    height: 30px;\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    background-color: var(--dark-gray);\n    color: white;\n    transition: 0.15s;\n}\n\n#tempType:hover {\n    transform: scale(1.04)\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,WAAW;IACX,mCAAmC;AACvC;;AAEA;IACI,mCAAmC;IACnC,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,8BAA8B;IAC9B,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,kCAAkC;AACtC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,WAAW;IACX,UAAU;IACV,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,sBAAsB;IACtB,0BAA0B;AAC9B;;AAEA;IACI,OAAO;IACP,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,OAAO;IACP,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,mCAAmC;IACnC,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,kCAAkC;IAClC,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI;AACJ",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    font-family: 'Roboto';\n}\n\n:root {\n    --light-gray: #424242;\n    --dark-gray: #303030;\n}\n\n#container {\n    display: grid;\n    height: 100vh;\n    width: 100%;\n    grid-template: 1fr 1.5fr 12fr / 1fr;\n}\n\n#header {\n    background-color: var(--light-gray);\n    font-family: 'Oswald';\n    font-size: 24px;\n    font-weight: 700;\n    color: white;\n    display: flex;\n    align-items: center;\n}\n\n#header>p {\n    padding-left: 24px;\n}\n\n#search {\n    background-color: var(--dark-gray);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n}\n\n#search>form {\n    flex: 1;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#searchBar {\n    outline: none;\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px solid white;\n    height: 30%;\n    width: 35vw;\n    min-width: 300px;\n    color: white;\n    font-size: 16px;\n    background-color: var(--dark-gray);\n}\n\n#submit {\n    display: none;\n}\n\n#display {\n    background-color: #232323;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#weatherDisplay {\n    display: grid;\n    grid-template: 2fr 2fr 1fr / 1fr;\n    height: 50%;\n    width: 50%;\n    overflow: hidden;\n    border-radius: 5px;\n}\n\n#top {\n    background-color: rgb(100, 4, 100);\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n}\n\n#location {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: 'Oswald';\n    font-size: 30px;\n    font-weight: 700;\n    color: white;\n}\n\n#location>svg {\n    fill: white;\n}\n\n#weather {\n    flex: 1;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 24px;\n    color: lightgray;\n}\n\n#middle {\n    background-color: gray;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n}\n\n#temp {\n    font-family: 'Oswald';\n    color: lightgray;\n    font-size: 75px;\n}\n\n#humidity {\n    font-size: 24px;\n    color: white;\n}\n\n#bottom {\n    background-color: var(--light-gray);\n    display: flex;\n    padding-right: 24px;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 8px;\n    color: lightgray;\n}\n\n#tempType {\n    width: 100px;\n    height: 30px;\n    outline: none;\n    border: none;\n    border-radius: 10px;\n    background-color: var(--dark-gray);\n    color: white;\n    transition: 0.15s;\n}\n\n#tempType:hover {\n    transform: scale(1.04)\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(i[l]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var l=n[A],c=r.base?l[0]+r.base:l[0],d=a[c]||0,s="".concat(c," ").concat(d);a[c]=d+1;var p=t(s),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var g=o(f,r);r.byIndex=A,e.splice(A,0,{identifier:s,updater:g,references:1})}i.push(s)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var l=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),l=t.n(A),c=t(216),d=t.n(c),s=t(589),p=t.n(s),f=t(426),g={};function m(n,e,t,r){let o=document.createElement(`${n}`);o.className=`${e}`,o.setAttribute("id",`${t}`),document.getElementById(`${r}`).appendChild(o)}function u(n,e){document.getElementById(`${n}`).innerHTML=`${e}`}g.styleTagTransform=p(),g.setAttributes=l(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),e()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const h=document.getElementById("searchBar");document.getElementById("submit"),document.getElementById("form").addEventListener("submit",(n=>{n.preventDefault();let e=document.getElementById("searchBar").value;h.value="",function(n){u("display",""),m("div","","weatherDisplay","display"),m("div","","top","weatherDisplay"),m("div","","location","top"),m("p","","locationName","location"),m("img","","icon","location"),m("div","","weather","top"),m("p","","weatherName","weather"),m("div","","middle","weatherDisplay"),m("div","","temp","middle"),m("div","","humidity","middle"),m("div","","bottom","weatherDisplay"),m("button","","tempType","bottom"),u("tempType","Switch F/C"),async function(n){const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=6c4b9b17c0b21ea22dbbcf808f49caf2`,{mode:"cors"}),t=await e.json();console.log(t);let r=t.main.temp,o=t.main.humidity,a=t.name,i=t.weather[0].description,A=t.weather[0].icon,l=Math.round(10*(r-273.15))/10;u("locationName",`${a}`),u("weatherName",`${i}`),u("temp",`${l}°C`),u("humidity",`Humidity ${o}%`),document.getElementById("icon").setAttribute("src",`https://openweathermap.org/img/wn/${A}@2x.png`)}(n)}(e),document.getElementById("tempType").addEventListener("click",(()=>{let n=document.getElementById("temp");1==n.innerHTML.includes("C")?(u("temp",Math.round(10*(1.8*n.innerHTML.replace(/[^0-9.]/g,"")+32))/10+"°F"),console.log("C to F")):1==n.innerHTML.includes("F")&&(u("temp",`${Math.round((n.innerHTML.replace(/[^0-9.]/g,"")-32)*(5/9)*10/10)}°C`),console.log("F to C"))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,